{"version":3,"sources":["Components/Card.js","Components/Board.js","Components/VerticalStartIndicator.js","Components/HorizontalStartIndicator.js","Components/Game.js","Components/RegisterUserPanel.js","Components/WaitingPanel.js","Components/RoleSelector.js","Components/RolePanel.js","Components/Chevron.js","Components/WordPackButton.js","Components/WordPackList.js","Components/PackPanel.js","Components/App.js","serviceWorker.js","index.js"],"names":["Card","beenClicked","this","props","cardColor","react_default","a","createElement","id","onClick","handleCardClick","className","style","Object","assign","styles","card","clickedTanColor","word","clickedBlueColor","clickedRedColor","clickedBlackColor","displayColor","tanColor","blueColor","redColor","blackColor","Component","width","height","display","alignItems","justifyContent","fontWeight","borderRadius","textAlign","cursor","padding","userSelect","overflowWrap","backgroundColor","color","Board","_this","seeColors","role","coloredCards","cards","map","data","index","Components_Card","key","socket","defaultCards","Fragment","flexFlow","VerticalStartIndicator","firstPlayer","verticalBar","marginLeft","marginRight","HorizontalStartIndicator","horizontalBar","marginTop","marginBottom","Game","nextProps","differentCards","differentClueWordValue","clueWordValue","differentClueWords","clueWords","setState","objectSpread","state","replace","lastClueWord","length","topHalf","Components_HorizontalStartIndicator","firstColor","Components_VerticalStartIndicator","Components_Board","bottomHalf","leftHalf","onSubmit","handleClueWordSubmit","submit","type","value","onChange","handleClueWordChange","flexDirection","RegisterUserPanel","container","title","credit","registerPlayer","prompt","form","playerName","handleNameChange","fontSize","WaitingPanel","lobby","lobbyNames","name","players","waitingScreen","message","box","RoleSelector","isRoleTaken","roles","indexOf","playerRole","panel","button","greyButton","handleRoleSelection","boxShadow","margin","RolePanel","Components_RoleSelector","Chevron","morePacks","totalPacks","pageNumber","webPacksPerPage","direction","chevron","viewBox","aria-hidden","d","WordPackButton","display_name","wordPack","WordPackList","wordPacks","Components_WordPackButton","handlePackSelection","lowerBound","upperBound","slice","packs","PackPanel","webPacks","Components_Chevron","previousPage","Components_WordPackList","nextPage","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getPacks","url","console","log","fetch","then","response","ok","Error","statusText","json","catch","error","getBoard","gameId","deleteAllGames","toggleView","event","preventDefault","toggleColors","pack","target","context","packType","emit","content","playerRegistered","isFirstPlayer","numRegisteredPlayers","rolesChosen","openSocket","socketUrl","on","gameID","_isFirstPlayer","info","numPlayers","tileId","cardsCopy","clueWordsCopy","push","screen","Components_WaitingPanel","Components_PackPanel","Components_RolePanel","Components_Game","Components_RegisterUserPanel","Boolean","window","location","hostname","match","ReactDOM","render","Components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f1fb9f5c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../Static/css/Card.css';\n\nclass Card extends Component {\n    static propTypes = {\n        word: PropTypes.string.isRequired,\n        displayColor: PropTypes.string.isRequired,\n        cardColor: PropTypes.string.isRequired,\n        socket: PropTypes.object.isRequired,\n        id: PropTypes.number.isRequired,\n        beenClicked: PropTypes.string.isRequired,\n        handleCardClick: PropTypes.func.isRequired\n    }\n    \n    render() {\n        const beenClicked = this.props.beenClicked === \"true\"\n        return(\n            (beenClicked === true && this.props.cardColor === \"tan\")\n            ?\n            <div id={this.props.id} onClick={this.props.handleCardClick} className=\"card\"\n            style={Object.assign({}, styles.card, styles.clickedTanColor)}>\n                {this.props.word}\n            </div>\n            :\n            (beenClicked === true && this.props.cardColor === \"blue\")\n            ?\n            <div id={this.props.id} onClick={this.props.handleCardClick} className=\"card\"\n            style={Object.assign({}, styles.card, styles.clickedBlueColor)}>\n                {this.props.word}\n            </div>\n            :\n            (beenClicked === true && this.props.cardColor === \"red\")\n            ?\n            <div id={this.props.id} onClick={this.props.handleCardClick} className=\"card\"\n            style={Object.assign({}, styles.card, styles.clickedRedColor)}>\n                {this.props.word}\n            </div>\n            :\n            (beenClicked === true && this.props.cardColor === \"black\")\n            ?\n            <div id={this.props.id} onClick={this.props.handleCardClick} className=\"card\"\n            style={Object.assign({}, styles.card, styles.clickedBlackColor)}>\n                {this.props.word}\n            </div>\n            :\n            this.props.displayColor === \"tan\"\n            ?\n            <div id={this.props.id} onClick={this.props.handleCardClick} className=\"card\"\n            style={Object.assign({}, styles.card, styles.tanColor)}>\n                {this.props.word}\n            </div>\n            :\n            this.props.displayColor === \"blue\"\n            ?\n            <div id={this.props.id} onClick={this.props.handleCardClick} className=\"card\"\n            style={Object.assign({}, styles.card, styles.blueColor)}>\n                {this.props.word}\n            </div>\n            :\n            this.props.displayColor === \"red\"\n            ?\n            <div id={this.props.id} onClick={this.props.handleCardClick} className=\"card\"\n            style={Object.assign({}, styles.card, styles.redColor)}>\n                {this.props.word}\n            </div>\n            :\n            <div id={this.props.id} onClick={this.props.handleCardClick} className=\"card\"\n            style={Object.assign({}, styles.card, styles.blackColor)}>\n                {this.props.word}\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    card: {\n        width: \"12%\",\n        height: \"12%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        fontWeight: \"bold\",\n        borderRadius: \"10%\",\n        textAlign: \"center\",\n        cursor: \"pointer\",\n        padding: \"3%\",\n        userSelect: \"none\",\n        overflowWrap: \"break-word\",\n    },\n    tanColor: {\n        backgroundColor: \"tan\",\n        color: \"black\"\n    },\n    clickedTanColor: {\n        backgroundColor: \"#936a39\",\n        color: \"#936a39\"\n    },\n    blueColor: {\n        backgroundColor: \"#6b68ff\",\n        color: \"white\"\n    },\n    clickedBlueColor: {\n        backgroundColor: \"#0400ff\",\n        color: \"#0400ff\"\n    },\n    redColor: {\n        backgroundColor: \"#ff4e47\",\n        color: \"white\"\n    },\n    clickedRedColor: {\n        backgroundColor: \"#e60800\",\n        color: \"#e60800\"\n    },\n    blackColor: {\n        backgroundColor: \"grey\",\n        color: \"black\"\n    },\n    clickedBlackColor: {\n        backgroundColor: \"black\",\n        color: \"black\"\n    },\n  };\n\nexport default Card;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from './Card.js';\n\nclass Board extends Component {\n    static propTypes = {\n        cards: PropTypes.array.isRequired,\n        socket: PropTypes.object.isRequired,\n        handleCardClick: PropTypes.func.isRequired,\n        role: PropTypes.string.isRequired,\n    }\n\n    render() {\n        let seeColors = this.props.role === \"Red_Giver\" || this.props.role === \"Blue_Giver\";\n        let coloredCards = this.props.cards.map((data,index) => \n            <Card \n                key={index}\n                id={index}\n                word={data[\"word\"]}\n                displayColor={data[\"color\"]}\n                cardColor={data[\"color\"]}\n                socket={this.props.socket}\n                beenClicked={data[\"beenClicked\"]}\n                handleCardClick={this.props.handleCardClick}\n            />\n        )\n        let defaultCards = this.props.cards.map((data,index) =>\n            <Card\n                key={index}\n                id={index}\n                word={data[\"word\"]}\n                displayColor={\"tan\"}\n                cardColor={data[\"color\"]}\n                socket={this.props.socket}\n                beenClicked={data[\"beenClicked\"]}\n                handleCardClick={this.props.handleCardClick}\n            />\n        )\n        return (\n            <React.Fragment>\n                {seeColors\n                ?\n                <div style={styles.card}>{coloredCards}</div>\n                :\n                <div style={styles.card}>{defaultCards}</div>\n                }\n            </React.Fragment>\n        )\n    }\n}\n\nconst styles = {\n    card: {\n        display: \"flex\",\n        flexFlow: \"row wrap\",\n        justifyContent: \"space-around\",\n        height: \"90%\",\n        alignItems: \"center\",\n        width: \"90%\"\n      },\n};\n\nexport default Board;","import React, { Component } from 'react';\n\nclass VerticalStartIndicator extends Component {\n  render() {\n    return(\n      <React.Fragment>\n        {this.props.firstPlayer === \"blue\"\n        ?\n        <div style={Object.assign({}, styles.verticalBar, styles.blueColor)}></div>\n        :\n        <div style={Object.assign({}, styles.verticalBar, styles.redColor)}></div>\n        }\n      </React.Fragment>\n    )\n  }\n}\n\nconst styles = {\n  verticalBar: {\n    width: \"4%\",\n    height: \"20%\",\n    marginLeft: \".25%\",\n    marginRight: \".25%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  blueColor: {\n    backgroundColor: \"#6b68ff\"\n  },\n  redColor: {\n    backgroundColor: \"#ff4e47\"\n  }\n}\n\nexport default VerticalStartIndicator;","import React, { Component } from 'react';\n\nclass HorizontalStartIndicator extends Component {\n  render() {\n    return(\n      <React.Fragment>\n        {this.props.firstPlayer === \"blue\"\n        ?\n        <div style={Object.assign({}, styles.horizontalBar, styles.blueColor)}></div>\n        :\n        <div style={Object.assign({}, styles.horizontalBar, styles.redColor)}></div>\n        }\n      </React.Fragment>\n    )\n  }\n}\n\nconst styles = {\n  horizontalBar: {\n    width: \"20%\",\n    marginRight: \"40%\",\n    marginLeft: \"40%\",\n    height: \"4.75%\",\n    marginTop: \".5%\",\n    marginBottom: \".5%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  blueColor: {\n    backgroundColor: \"#6b68ff\"\n  },\n  redColor: {\n    backgroundColor: \"#ff4e47\"\n  }\n}\n\nexport default HorizontalStartIndicator;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Board from './Board.js';\nimport VerticalStartIndicator from './VerticalStartIndicator';\nimport HorizontalStartIndicator from './HorizontalStartIndicator';\n\nclass Game extends Component {\n  static propTypes = {\n    firstColor: PropTypes.string.isRequired,\n    cards: PropTypes.array.isRequired,\n    socket: PropTypes.object.isRequired,\n    handleCardClick: PropTypes.func.isRequired,\n    role: PropTypes.string.isRequired,\n    clueWordValue: PropTypes.string.isRequired,\n    clueWords: PropTypes.array.isRequired,\n    handleClueWordSubmit: PropTypes.func.isRequired,\n    handleClueWordChange: PropTypes.func.isRequired\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const differentCards = this.props.cards !== nextProps.cards;\n    const differentClueWordValue = this.props.clueWordValue !== nextProps.clueWordValue;\n    const differentClueWords = this.props.clueWords !== nextProps.clueWords;\n    return differentCards || differentClueWordValue || differentClueWords;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({...this.state,nextProps})\n  }\n\n  render() {\n    let role = this.props.role.replace(/_/g, ' ')\n    let lastClueWord = this.props.clueWords[this.props.clueWords.length -1]\n    let clueWords = this.props.clueWords.map((data,index) => \n      <p key={index}>{data}</p>\n    )\n    return(\n      <>\n        <div style={styles.topHalf}>\n        <HorizontalStartIndicator firstColor={this.props.firstColor} />\n        <VerticalStartIndicator firstColor={this.props.firstColor}/>\n        <Board\n          cards={this.props.cards}\n          socket={this.props.socket}\n          handleCardClick={this.props.handleCardClick}\n          role={this.props.role}\n        />\n        <VerticalStartIndicator firstColor={this.props.firstColor}/>\n        <HorizontalStartIndicator firstColor={this.props.firstColor} />\n      </div>\n      <div style={styles.bottomHalf}>\n        <div style={styles.leftHalf}>\n          {role === \"Red Giver\" || role === \"Blue Giver\"\n          ?\n          <div>\n            <form onSubmit={this.props.handleClueWordSubmit}>\n              <label>\n                Enter Clue:\n                <input\n                  style={styles.submit}\n                  type=\"text\" \n                  className=\"clueWord\"   \n                  value={this.props.clueWordValue}\n                  onChange={this.props.handleClueWordChange} \n                />\n                <input type = \"submit\" value = \"Submit\" />\n              </label>\n            </form>\n          </div>\n          : null}\n          <div>\n            <h4>{lastClueWord}</h4>\n          </div>\n        </div>\n        <div>\n          {clueWords}\n        </div>\n        \n      </div>\n    </>\n      \n    )\n  }\n}\n\nconst styles = {\n  topHalf: {\n    display: \"flex\",\n    flexFlow: \"row wrap\",\n    height: \"80%\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  bottomHalf: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  leftHalf: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  }\n}\n\nexport default Game;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass RegisterUserPanel extends Component {\n  static propTypes = {\n    registerPlayer: PropTypes.func.isRequired,\n    handleNameChange: PropTypes.func.isRequired,\n    playerName: PropTypes.string.isRequired\n  }\n\n  render() {\n    return( \n      <div style={styles.container}>\n        <div style={styles.title}>Welcome to CodeNames</div>\n        <div style={styles.credit}>Created by Connor Inglis</div>\n        <form onSubmit={this.props.registerPlayer} style={styles.submit}>\n          <label>\n            <div style={styles.prompt}>Please Enter you Name:</div>\n            <input\n              style={styles.form}\n              type=\"text\" \n              className=\"playerNameInput\"   \n              value={this.props.playerName}\n              onChange={this.props.handleNameChange} \n            />\n            {/* <input type = \"submit\" value = \"Submit\" /> */}\n          </label>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst styles = {\n  container: {\n    width: \"80%\",\n    marginLeft: \"10%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n  title: {\n    fontSize: \"100px\",\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n  },\n  credit: {\n    fontSize: \"20px\",\n    textAlign: \"right\",\n    marginBottom: \"100px\",\n    marginRight: \"40px\"\n  },\n  prompt: {\n    fontSize: \"30px\"\n  },\n  submit: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  form: {\n    height: \"6vh\",\n    width: \"30vw\",\n    fontSize: \"30px\",\n  }\n}\n\nexport default RegisterUserPanel;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass WaitingPanel extends Component {\n  static propTypes = {\n    playerName: PropTypes.string.isRequired,\n    lobbyNames: PropTypes.array.isRequired,\n    message: PropTypes.string\n  }\n\n  render() {\n    let lobby = this.props.lobbyNames.map((name,index) => \n      <div style={styles.players} key={index}>{name}</div>\n    );\n\n    return( \n      <div style={styles.waitingScreen}>\n        <h1>Hi {this.props.playerName}</h1>\n        <h2>{this.props.message}</h2>\n        <div style={styles.box}>\n          {lobby}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst styles = {\n  waitingScreen: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  box: {\n    width: \"60%\",\n    height: \"60vh\",\n    backgroundColor: \"white\"\n  },\n  players: {\n    fontSize: \"40px\"\n  }\n}\n\nexport default WaitingPanel;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass RoleSelector extends Component {\n  static propTypes = {\n    playerRole: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    handleRoleSelection: PropTypes.func.isRequired,\n    roles: PropTypes.array.isRequired\n  }\n\n  render() {\n    let isRoleTaken = this.props.roles.indexOf(this.props.playerRole) >= 0;\n    let role = this.props.playerRole.replace(/_/g, ' ');\n    return( \n\n      <div style={styles.panel}>\n        {!isRoleTaken\n        ?\n        <div style={styles.button} className={this.props.playerRole} onClick={this.props.handleRoleSelection}>\n          Select Role\n        </div>\n        :\n        <div style={Object.assign({},styles.button,styles.greyButton)}>\n          Role Taken\n        </div>\n        }\n        <h2>{role}</h2>\n      </div>\n    )\n  }\n}\n\nconst styles = {\n  panel: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  button: {\n    display: \"flex\",\n    backgroundColor: \"green\",\n    width: \"25%\",\n    height: \"80%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    boxShadow: \"3px 3px\",\n    cursor: \"pointer\",\n    margin: \"5%\",\n    fontWeight: \"bold\", \n    padding: \"1%\",\n    userSelect: \"none\",\n    textAlign: \"center\",\n    color: \"white\"\n  },\n  greyButton: {\n    color: \"grey\",\n    backgroundColor: \"darkgrey\"\n  }\n};\n\nexport default RoleSelector;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport RoleSelector from './RoleSelector';\n\nclass RolePanel extends Component {\n  static propTypes = {\n    handleRoleSelection: PropTypes.func.isRequired,\n    roles: PropTypes.array.isRequired,\n    playerName: PropTypes.string.isRequired\n  }\n\n  render() {\n    return( \n      <div>\n        <RoleSelector\n          playerRole=\"Red_Giver\"\n          handleRoleSelection={this.props.handleRoleSelection}\n          roles={this.props.roles}\n        />\n        <RoleSelector\n          playerRole=\"Blue_Giver\"\n          handleRoleSelection={this.props.handleRoleSelection}\n          roles={this.props.roles}\n        />\n        <RoleSelector\n          playerRole=\"Red_Guesser\"\n          handleRoleSelection={this.props.handleRoleSelection}\n          roles={this.props.roles}\n        />\n        <RoleSelector\n          playerRole=\"Blue_Guesser\"\n          handleRoleSelection={this.props.handleRoleSelection}\n          roles={this.props.roles}\n        />\n      </div>\n    )\n  }\n}\n\n// const styles = {\n  \n// };\n\nexport default RolePanel;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Chevron extends Component {\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n    direction: PropTypes.string.isRequired,\n    webPacksPerPage: PropTypes.number.isRequired,\n    pageNumber: PropTypes.number.isRequired,\n    totalPacks: PropTypes.number.isRequired,\n  }\n\n  render() {\n    let morePacks = (this.props.totalPacks > this.props.pageNumber * this.props.webPacksPerPage) ? true : false;\n    \n    return(\n      <React.Fragment>\n        {(this.props.direction === \"left\")\n        ?\n        (\n          (this.props.pageNumber !== 1)\n          ?\n          <div style={styles.chevron} onClick={this.props.onClick}>\n            <svg viewBox=\"0 0 32 32\" className=\"icon icon-chevron-left\" aria-hidden=\"true\">\n              <path d=\"M14.19 16.005l7.869 7.868-2.129 2.129-9.996-9.997L19.937 6.002l2.127 2.129z\"/>\n            </svg>\n          </div>\n          :\n          <div style={styles.chevron}></div>\n        )\n        :\n        (\n          (morePacks)\n          ?\n          <div style={styles.chevron} onClick={this.props.onClick}>\n            <svg viewBox=\"0 0 32 32\" className=\"icon icon-chevron-right\" aria-hidden=\"true\">\n              <path d=\"M18.629 15.997l-7.083-7.081L13.462 7l8.997 8.997L13.457 25l-1.916-1.916z\"/>\n            </svg>\n          </div>\n          :\n          <div style={styles.chevron}></div>\n        )\n        }\n      </React.Fragment>\n    )\n  }\n}\n\nconst styles = {\n  chevron: {\n    width: \"10%\",\n    backgroundColor: \"white\",\n    boxShadow: \"3px 3px\",\n    cursor: \"pointer\",\n  }\n};\n\nexport default Chevron;","import React, { Component } from 'react';\nimport '../Static/css/WordPackButton.css';\n\nclass WordPackButton extends Component {\n    render() {  \n        let display_name = this.props.wordPack.replace(/_/g,\" \");\n        return (\n            <div id=\"wordPackButton\" className={this.props.wordPack} onClick={this.props.onClick} style={styles.button}>\n                {display_name}\n            </div>\n        )\n    }\n}\n\nconst styles = {\n  button: {\n    display: \"flex\",\n    backgroundColor: \"white\",\n    width: \"25%\",\n    height: \"80%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    boxShadow: \"3px 3px\",\n    cursor: \"pointer\",\n    margin: \"1%\",\n    fontWeight: \"bold\", \n    padding: \"1%\",\n    userSelect: \"none\",\n    textAlign: \"center\"\n  }\n};\n\nexport default WordPackButton;","import React, { Component } from 'react';\nimport WordPackButton from './WordPackButton.js';\nimport PropTypes from 'prop-types';\n\nclass WordPackList extends Component {\n    static propTypes = {\n        wordPacks: PropTypes.array.isRequired,\n        handlePackSelection: PropTypes.func.isRequired,\n        webPacksPerPage: PropTypes.number.isRequired,\n        pageNumber: PropTypes.number.isRequired,\n      }\n    \n    render() {\n        let wordPacks = this.props.wordPacks.map((data,index) => \n            <WordPackButton key={index} wordPack={data} onClick={this.props.handlePackSelection}/>\n        )\n\n        let lowerBound = this.props.webPacksPerPage * (this.props.pageNumber-1);\n        let upperBound = this.props.webPacksPerPage * (this.props.pageNumber);\n        wordPacks = wordPacks.slice(lowerBound,upperBound);\n        \n        return (\n            <div style={styles.packs}>\n                {wordPacks}\n            </div>\n        )\n    }\n}\n\nconst styles = {\n  packs: {\n    display: \"flex\",\n    flexFlow: \"row wrap\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    width: \"80%\",\n    height: \"100%\",\n    cursor: \"pointer\",\n  }\n};\n\nexport default WordPackList;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Chevron from './Chevron.js';\nimport WordPackList from './WordPackList.js';\n\nclass PackPanel extends Component {\n  static propTypes = {\n    previousPage: PropTypes.func.isRequired,\n    nextPage: PropTypes.func.isRequired,\n    handlePackSelection: PropTypes.func.isRequired,\n    webPacksPerPage: PropTypes.number.isRequired,\n    pageNumber: PropTypes.number.isRequired,\n    totalPacks: PropTypes.number.isRequired,\n    wordPacks: PropTypes.array.isRequired,\n  }\n\n  render() {\n    return( \n      <div style={styles.container}>\n        <div style={styles.title}>Choose a pack</div>\n        <div style={styles.webPacks}>\n          <Chevron \n            direction=\"left\" \n            onClick={this.props.previousPage} \n            webPacksPerPage={this.props.webPacksPerPage} \n            pageNumber={this.props.pageNumber} \n            totalPacks={this.props.totalPacks}\n          />\n          <WordPackList\n            wordPacks={this.props.wordPacks}\n            handlePackSelection={this.props.handlePackSelection}\n            webPacksPerPage={this.props.webPacksPerPage}\n            pageNumber={this.props.pageNumber}\n          />\n          <Chevron \n            direction=\"right\"\n            onClick={this.props.nextPage} \n            webPacksPerPage={this.props.webPacksPerPage} \n            pageNumber={this.props.pageNumber} \n            totalPacks={this.props.totalPacks}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  title: {\n    fontSize: \"100px\",\n  },\n  button: {\n    display: \"flex\",\n    backgroundColor: \"white\",\n    width: \"25%\",\n    height: \"50%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    boxShadow: \"3px 3px\",\n    cursor: \"pointer\",\n    margin: \"5%\",\n    overflowWrap: \"break-word\",\n    userSelect: \"none\",\n    textAlign: \"center\",\n    padding: \"2.5%\",\n  },\n  webPacks: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"60%\",\n    margin: \"5%\",\n    height: \"100px\",\n  }\n};\n\nexport default PackPanel;","import React, { Component } from 'react';\nimport './../Static/css/App.css';\nimport Game from './Game.js';\nimport PropTypes from 'prop-types';\nimport openSocket from 'socket.io-client';\nimport RegisterUserPanel from './RegisterUserPanel.js';\nimport WaitingPanel from './WaitingPanel.js';\nimport RolePanel from './RolePanel.js';\nimport PackPanel from './PackPanel.js';\n\n// const socketUrl = \"localhost:3231\"\nclass App extends Component {\n  static propTypes = {\n    url: PropTypes.string.isRequired,\n    socketUrl: PropTypes.string.isRequired,\n    webPacksPerPage: PropTypes.number.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: [],\n      clueWords: [],\n      clueWordValue: '',\n      firstColor: '',\n      gameId: '',\n      isFirstPlayer: false,\n      lobbyNames: [],\n      numRegisteredPlayers: 0,\n      packType: '',\n      pageNumber: 1,\n      playerName: '',\n      playerRegistered: false,\n      role: '',\n      rolesChosen: [],\n      socket: openSocket(this.props.socketUrl),\n      toggleColors: true,\n      totalPacks: 0,\n      wordPacks: []\n    }\n\n    this.state.socket.on('gameId', gameID => {\n      this.setState({ gameId: gameID }, () => {\n        console.log(\"GameID: \" + this.state.gameId);\n      });\n    });\n\n    this.state.socket.on(\"firstPlayer\", _isFirstPlayer => {\n      this.setState({isFirstPlayer: _isFirstPlayer});\n      this.getPacks();\n    });\n\n    this.state.socket.on(\"message\", message => {\n      console.log(\"MESSAGE: \" + message);\n    });\n\n    this.state.socket.on(\"playerCount\", info => {\n      this.setState({\n        numRegisteredPlayers: info[\"numPlayers\"],\n        lobbyNames: info[\"lobbyList\"]\n      });\n    });\n\n    this.state.socket.on(\"registerPlayer\", name => {\n      this.setState({\n        playerName: name,\n        playerRegistered: true\n      });\n    });\n\n    this.state.socket.on(\"registerUserRole\", playerRole => {\n      this.setState({role:playerRole}, () => {console.log(\"PLAYER ROLE: \" + this.state.role);});\n    });\n\n    this.state.socket.on(\"registerNewRoll\", roles => {\n      this.setState({rolesChosen: roles}, () => {\n        console.log(\"ROLES CHOSEN: \" + this.state.rolesChosen);\n      })\n    })\n\n    this.state.socket.on(\"createGameBoard\", content => {\n      this.setState({packType: content[\"pack\"]});\n      this.getBoard(content[\"url\"]);\n    })\n\n    this.state.socket.on(\"removePlayer\", numPlayers => {\n      this.setState({numRegisteredPlayers: numPlayers});\n    });\n\n    this.state.socket.on('cardClicked', tileId => {\n      const cardsCopy = Object.assign([], this.state.cards);\n      cardsCopy[tileId][\"beenClicked\"] = cardsCopy[tileId][\"beenClicked\"] === \"true\" ? \"false\" : \"true\"\n      this.setState({\n          cards: cardsCopy\n      });\n    });\n\n    this.state.socket.on(\"clueWordGiven\", clueWordValue => {\n      let clueWordsCopy = Object.assign([],this.state.clueWords);\n      clueWordsCopy.push(clueWordValue);\n      this.setState({clueWords: clueWordsCopy, clueWordValue: \"\"});\n    })\n\n    this.state.socket.on('deleteAllGames', () => {\n      this.deleteAllGames()\n    });\n\n    this.state.socket.on(\"tooManyPlayers\", () => {\n      console.log(\"Cannot Join Game due to too many players\");\n    });\n  }\n\n  componentWillUnmount() {\n    this.deleteAllGames();\n  }\n\n  getPacks = () => {\n    let url = this.props.url + \"wordPacks\";\n    console.log(url)\n    fetch(url)\n    .then((response) => {\n      console.log(response);\n      if (!response.ok) throw Error(response.statusText);\n          return response.json();\n      })\n    .then((data) => {\n      this.setState({\n        wordPacks: data.wordPacks,\n        totalPacks: data.totalPacks,\n      });\n    })\n    .catch(error => console.log(error)); // eslint-disable-line no-console \n  }\n\n  getBoard = url => {\n    // Call REST API to get number of likes\n    console.log(\"URL FROM GetBoard: \" + url);\n    fetch(url)\n    .then((response) => {\n      if (!response.ok) throw Error(response.statusText);\n          return response.json();\n      })\n    .then((data) => {\n      this.setState({\n        cards: data.cards,\n        firstColor: data.firstColor,\n        gameId: data.gameId\n      })\n    })\n    .catch(error => console.log(error)); // eslint-disable-line no-console \n  }\n\n  deleteAllGames = () => {\n    let url = this.props.url + \"deleteAllGames/\";\n    fetch(url)\n    .then((response) => {\n      if (!response.ok) throw Error(response.statusText);\n        return response.json();\n      })\n    .then((data) => {})\n    .catch(error => console.log(error)); // eslint-disable-line no-console \n  }\n\n  toggleView = event => {\n    event.preventDefault();\n    this.setState({\n      toggleColors: !this.state.toggleColors\n    });\n  }\n\n  handlePackSelection = event => {\n    event.preventDefault();\n    let pack = event.target.className;\n    let url = this.props.url + \"createGame/\" + this.state.gameId + \"/\" + pack;\n    let context = {\"url\":url,\"packType\":pack};\n    this.state.socket.emit(\"createGameBoard\", context);\n  }\n\n  handleRoleSelection = event => {\n    event.preventDefault();\n    let content = {\n      \"playerName\": this.state.playerName,\n      \"role\": event.target.className\n    }\n    this.state.socket.emit(\"registerPlayerRole\", content)\n  }\n\n  handleClueWordSubmit = event => {\n    event.preventDefault();\n    this.state.socket.emit(\"clueWordSubmit\", this.state.clueWordValue);\n  }\n\n  handleClueWordChange = event => {\n    event.preventDefault();\n    this.setState({clueWordValue:event.target.value})\n  }\n\n\n  previousPage = () => {\n    this.setState({ pageNumber: this.state.pageNumber - 1 });\n  }\n\n  nextPage = () => {\n    this.setState({ pageNumber: this.state.pageNumber + 1 });\n  }\n\n  handleCardClick = event => {\n    event.preventDefault();\n    this.state.socket.emit('cardClicked', event.target.id);\n  }\n\n  handleNameChange = event => {\n    event.preventDefault();\n    this.setState({ playerName: event.target.value});\n  }\n\n  registerPlayer = event => {\n    event.preventDefault();\n    if(!this.state.playerRegistered) {\n      this.state.socket.emit('submitRegisterPlayer', this.state.playerName);\n    }\n  }\n\n  render () {\n    return (\n      <div style={styles.screen}>\n        <div className=\"container\">\n          {!this.state.playerRegistered\n          ?\n          <RegisterUserPanel\n            handleNameChange={this.handleNameChange}\n            registerPlayer={this.registerPlayer}\n            playerName={this.state.playerName}\n          />\n          :\n          (this.state.numRegisteredPlayers < 4)\n          ?\n          <WaitingPanel\n            playerName={this.state.playerName}\n            lobbyNames={this.state.lobbyNames}\n            message=\"Waiting on 4 players to join...\"\n          />\n          :\n          (this.state.isFirstPlayer && this.state.packType === '')\n          ?\n          <PackPanel \n            previousPage={this.previousPage}\n            nextPage={this.nextPage}\n            handlePackSelection={this.handlePackSelection}\n            webPacksPerPage={this.props.webPacksPerPage}\n            pageNumber={this.state.pageNumber}\n            totalPacks={this.state.totalPacks}\n            wordPacks={this.state.wordPacks}\n          />\n          :\n          (this.state.packType === '')\n          ?\n          <WaitingPanel\n            playerName={this.state.playerName}\n            lobbyNames={this.state.lobbyNames}\n            message=\"Waiting on pack selection\"\n          />\n          :\n          (this.state.rolesChosen.length < 4)\n          ?\n          <RolePanel \n            handleRoleSelection={this.handleRoleSelection}\n            roles={this.state.rolesChosen}\n            playerName={this.state.playerName}\n          />      \n          :\n          <Game\n            firstColor={this.state.firstColor}\n            cards={this.state.cards}\n            socket={this.state.socket}\n            handleCardClick={this.handleCardClick}\n            role={this.state.role}\n            clueWordValue={this.state.clueWordValue}\n            clueWords={this.state.clueWords}\n            handleClueWordSubmit={this.handleClueWordSubmit}\n            handleClueWordChange={this.handleClueWordChange}\n          />\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  screen: {\n    backgroundColor: \"white\",\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n};\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Static/css/index.css';\nimport App from './Components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\n//const devUrl = \"http://localhost:5000/api/v1/\"\nconst prodUrl = \"https://testing-deployment-01.herokuapp.com/api/v1/\"\nconst socketUrl = \"http://localhost:3231\"\nReactDOM.render(<App url={prodUrl} socketUrl={socketUrl} webPacksPerPage={3} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}