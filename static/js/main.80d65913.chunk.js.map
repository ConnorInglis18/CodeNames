{"version":3,"sources":["Components/Card.js","Components/Board.js","Components/VerticalStartIndicator.js","Components/HorizontalStartIndicator.js","Components/WordPackButton.js","Components/WordPackList.js","Components/Chevron.js","Components/App.js","serviceWorker.js","index.js"],"names":["Card","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","beenClicked","handleClick","bind","assertThisInitialized","event","setState","cardColor","react_default","a","createElement","onClick","className","style","assign","styles","card","clickedTanColor","word","clickedBlueColor","clickedRedColor","clickedBlackColor","displayColor","tanColor","blueColor","redColor","blackColor","Component","width","height","display","alignItems","justifyContent","fontWeight","borderRadius","textAlign","cursor","padding","userSelect","overflowWrap","backgroundColor","color","Board","players","words","map","data","index","Components_Card","key","defaultCards","Fragment","toggleColors","cards","flexFlow","VerticalStartIndicator","firstPlayer","verticalBar","marginLeft","marginRight","HorizontalStartIndicator","horizontalBar","marginTop","marginBottom","WordPackButton","display_name","wordPack","replace","id","button","boxShadow","margin","WordPackList","wordPacks","Components_WordPackButton","lowerBound","webPacksPerPage","pageNumber","upperBound","slice","packs","Chevron","morePacks","totalPacks","direction","chevron","viewBox","aria-hidden","d","App","toggleView","preventDefault","handlePacks","url","target","fetch","then","response","ok","Error","statusText","json","catch","error","console","log","previousPage","nextPage","_this2","screen","topHalf","Components_HorizontalStartIndicator","Components_VerticalStartIndicator","Components_Board","bottomHalf","webPacks","Components_Chevron","Components_WordPackList","flexDirection","Boolean","window","location","hostname","match","ReactDOM","render","Components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.80d65913.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../Static/css/Card.css';\n\nclass Card extends Component {\n    static propTypes = {\n        word: PropTypes.string.isRequired,\n        displayColor: PropTypes.string.isRequired,\n        cardColor: PropTypes.string.isRequired,\n      }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            beenClicked: this.props.beenClicked\n        }\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(event) {\n        this.setState({\n            beenClicked: !this.state.beenClicked\n        });\n    }\n\n    render() {\n        return(\n            (this.state.beenClicked === true && this.props.cardColor === \"tan\")\n            ?\n            <div onClick={this.handleClick} className=\"card\"\n            style={Object.assign({}, styles.card, styles.clickedTanColor)}>\n                {this.props.word}\n            </div>\n            :\n            (this.state.beenClicked === true && this.props.cardColor === \"blue\")\n            ?\n            <div onClick={this.handleClick} className=\"card\"\n            style={Object.assign({}, styles.card, styles.clickedBlueColor)}>\n                {this.props.word}\n            </div>\n            :\n            (this.state.beenClicked === true && this.props.cardColor === \"red\")\n            ?\n            <div onClick={this.handleClick} className=\"card\"\n            style={Object.assign({}, styles.card, styles.clickedRedColor)}>\n                {this.props.word}\n            </div>\n            :\n            (this.state.beenClicked === true && this.props.cardColor === \"black\")\n            ?\n            <div onClick={this.handleClick} className=\"card\"\n            style={Object.assign({}, styles.card, styles.clickedBlackColor)}>\n                {this.props.word}\n            </div>\n            :\n            this.props.displayColor === \"tan\"\n            ?\n            <div onClick={this.handleClick} className=\"card\"\n            style={Object.assign({}, styles.card, styles.tanColor)}>\n                {this.props.word}\n            </div>\n            :\n            this.props.displayColor === \"blue\"\n            ?\n            <div onClick={this.handleClick} className=\"card\"\n            style={Object.assign({}, styles.card, styles.blueColor)}>\n                {this.props.word}\n            </div>\n            :\n            this.props.displayColor === \"red\"\n            ?\n            <div onClick={this.handleClick} className=\"card\"\n            style={Object.assign({}, styles.card, styles.redColor)}>\n                {this.props.word}\n            </div>\n            :\n            <div onClick={this.handleClick} className=\"card\"\n            style={Object.assign({}, styles.card, styles.blackColor)}>\n                {this.props.word}\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    card: {\n        width: \"12%\",\n        height: \"12%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        fontWeight: \"bold\",\n        borderRadius: \"10%\",\n        textAlign: \"center\",\n        cursor: \"pointer\",\n        padding: \"3%\",\n        userSelect: \"none\",\n        overflowWrap: \"break-word\",\n    },\n    tanColor: {\n        backgroundColor: \"tan\",\n        color: \"black\"\n    },\n    clickedTanColor: {\n        backgroundColor: \"#936a39\",\n        color: \"#936a39\"\n    },\n    blueColor: {\n        backgroundColor: \"#6b68ff\",\n        color: \"white\"\n    },\n    clickedBlueColor: {\n        backgroundColor: \"#0400ff\",\n        color: \"#0400ff\"\n    },\n    redColor: {\n        backgroundColor: \"#ff4e47\",\n        color: \"white\"\n    },\n    clickedRedColor: {\n        backgroundColor: \"#e60800\",\n        color: \"#e60800\"\n    },\n    blackColor: {\n        backgroundColor: \"grey\",\n        color: \"black\"\n    },\n    clickedBlackColor: {\n        backgroundColor: \"black\",\n        color: \"black\"\n    },\n  };\n\nexport default Card;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from './Card.js';\n\nclass Board extends Component {\n    static propTypes = {\n        toggleColors: PropTypes.bool.isRequired,\n        words: PropTypes.array.isRequired\n    }\n    \n    render() {\n        let players = this.props.words.map((data,index) => \n            <Card key={index} word={data[0]} displayColor={data[1]} cardColor={data[1]} />\n        )\n        let defaultCards = this.props.words.map((data,index) =>\n            <Card key={index} word={data[0]} displayColor={\"tan\"} cardColor={data[1]} />\n        )\n        return (\n            <React.Fragment>\n                {this.props.toggleColors === true\n                ?\n                <div style={styles.cards}>{players}</div>\n                :\n                <div style={styles.cards}>{defaultCards}</div>\n                }\n            </React.Fragment>\n        )\n    }\n}\n\nconst styles = {\n    cards: {\n        display: \"flex\",\n        flexFlow: \"row wrap\",\n        justifyContent: \"space-around\",\n        height: \"90%\",\n        alignItems: \"center\",\n        width: \"90%\"\n      },\n};\n\nexport default Board;","import React, { Component } from 'react';\n\nclass VerticalStartIndicator extends Component {\n  render() {\n    return(\n      <React.Fragment>\n        {this.props.firstPlayer === \"blue\"\n        ?\n        <div style={Object.assign({}, styles.verticalBar, styles.blueColor)}></div>\n        :\n        <div style={Object.assign({}, styles.verticalBar, styles.redColor)}></div>\n        }\n      </React.Fragment>\n    )\n  }\n}\n\nconst styles = {\n  verticalBar: {\n    width: \"4%\",\n    height: \"20%\",\n    marginLeft: \".25%\",\n    marginRight: \".25%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  blueColor: {\n    backgroundColor: \"#6b68ff\"\n  },\n  redColor: {\n    backgroundColor: \"#ff4e47\"\n  }\n}\n\nexport default VerticalStartIndicator;","import React, { Component } from 'react';\n\nclass HorizontalStartIndicator extends Component {\n  render() {\n    return(\n      <React.Fragment>\n        {this.props.firstPlayer === \"blue\"\n        ?\n        <div style={Object.assign({}, styles.horizontalBar, styles.blueColor)}></div>\n        :\n        <div style={Object.assign({}, styles.horizontalBar, styles.redColor)}></div>\n        }\n      </React.Fragment>\n    )\n  }\n}\n\nconst styles = {\n  horizontalBar: {\n    width: \"20%\",\n    marginRight: \"40%\",\n    marginLeft: \"40%\",\n    height: \"4.75%\",\n    marginTop: \".5%\",\n    marginBottom: \".5%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  blueColor: {\n    backgroundColor: \"#6b68ff\"\n  },\n  redColor: {\n    backgroundColor: \"#ff4e47\"\n  }\n}\n\nexport default HorizontalStartIndicator;","import React, { Component } from 'react';\nimport '../Static/css/WordPackButton.css';\n\nclass WordPackButton extends Component {\n    render() {  \n        let display_name = this.props.wordPack.replace(/_/g,\" \");\n        return (\n            <div id=\"wordPackButton\" className={this.props.wordPack} onClick={this.props.onClick} style={styles.button}>\n                {display_name}\n            </div>\n        )\n    }\n}\n\nconst styles = {\n  button: {\n    display: \"flex\",\n    backgroundColor: \"white\",\n    width: \"25%\",\n    height: \"80%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    boxShadow: \"3px 3px\",\n    cursor: \"pointer\",\n    margin: \"1%\",\n    fontWeight: \"bold\", \n    padding: \"1%\",\n    userSelect: \"none\",\n    textAlign: \"center\"\n  }\n};\n\nexport default WordPackButton;","import React, { Component } from 'react';\nimport WordPackButton from './WordPackButton.js';\nimport PropTypes from 'prop-types';\n\nclass WordPackList extends Component {\n    static propTypes = {\n        wordPacks: PropTypes.array.isRequired,\n        onClick: PropTypes.func.isRequired,\n        webPacksPerPage: PropTypes.number.isRequired,\n        pageNumber: PropTypes.number.isRequired,\n      }\n    \n    render() {\n        let wordPacks = this.props.wordPacks.map((data,index) => \n            <WordPackButton key={index} wordPack={data} onClick={this.props.onClick}/>\n        )\n\n        let lowerBound = this.props.webPacksPerPage * (this.props.pageNumber-1);\n        let upperBound = this.props.webPacksPerPage * (this.props.pageNumber);\n        wordPacks = wordPacks.slice(lowerBound,upperBound);\n        \n        return (\n            <div style={styles.packs}>\n                {wordPacks}\n            </div>\n        )\n    }\n}\n\nconst styles = {\n  packs: {\n    display: \"flex\",\n    flexFlow: \"row wrap\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    width: \"80%\",\n    height: \"100%\",\n    cursor: \"pointer\",\n  }\n};\n\nexport default WordPackList;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Chevron extends Component {\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n    direction: PropTypes.string.isRequired,\n    webPacksPerPage: PropTypes.number.isRequired,\n    pageNumber: PropTypes.number.isRequired,\n    totalPacks: PropTypes.number.isRequired,\n  }\n\n  render() {\n    let morePacks = (this.props.totalPacks > this.props.pageNumber * this.props.webPacksPerPage) ? true : false;\n    \n    return(\n      <React.Fragment>\n        {(this.props.direction === \"left\")\n        ?\n        (\n          (this.props.pageNumber !== 1)\n          ?\n          <div style={styles.chevron} onClick={this.props.onClick}>\n            <svg viewBox=\"0 0 32 32\" className=\"icon icon-chevron-left\" aria-hidden=\"true\">\n              <path d=\"M14.19 16.005l7.869 7.868-2.129 2.129-9.996-9.997L19.937 6.002l2.127 2.129z\"/>\n            </svg>\n          </div>\n          :\n          <div style={styles.chevron}></div>\n        )\n        :\n        (\n          (morePacks)\n          ?\n          <div style={styles.chevron} onClick={this.props.onClick}>\n            <svg viewBox=\"0 0 32 32\" className=\"icon icon-chevron-right\" aria-hidden=\"true\">\n              <path d=\"M18.629 15.997l-7.083-7.081L13.462 7l8.997 8.997L13.457 25l-1.916-1.916z\"/>\n            </svg>\n          </div>\n          :\n          <div style={styles.chevron}></div>\n        )\n        }\n      </React.Fragment>\n    )\n  }\n}\n\nconst styles = {\n  chevron: {\n    width: \"10%\",\n    backgroundColor: \"white\",\n    boxShadow: \"3px 3px\",\n    cursor: \"pointer\",\n  }\n};\n\nexport default Chevron;","import React, { Component } from 'react';\nimport './../Static/css/App.css';\nimport Board from './Board.js';\nimport VerticalStartIndicator from './VerticalStartIndicator';\nimport HorizontalStartIndicator from './HorizontalStartIndicator';\nimport WordPackList from './WordPackList.js';\nimport PropTypes from 'prop-types';\nimport Chevron from './Chevron.js';\n\n\nclass App extends Component {\n  static propTypes = {\n    url: PropTypes.string.isRequired,\n    webPacksPerPage: PropTypes.number.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstPlayer: '',\n      toggleColors: true,\n      words: [],\n      wordPacks: [],\n      pageNumber: 1,\n      totalPacks: 0\n    }\n  }\n\n  componentDidMount() {\n    // Call REST API to get number of likes\n    fetch(this.props.url)\n    .then((response) => {\n        if (!response.ok) throw Error(response.statusText);\n            return response.json();\n        })\n    .then((data) => {\n        this.setState({\n            words: data.words,\n            firstPlayer: data.firstPlayer,\n            wordPacks: data.wordPacks,\n            totalPacks: data.totalPacks\n        })\n    })\n    .catch(error => console.log(error)); // eslint-disable-line no-console \n  }\n\n  toggleView = event => {\n    event.preventDefault();\n    this.setState({\n      toggleColors: !this.state.toggleColors\n    });\n  }\n  \n  // handleChange(event) {\n  //   this.setState({\n  //     inputValue: event.target.value\n  //   });\n  // }\n\n  handlePacks = event => {\n    event.preventDefault();\n    let url = this.props.url + event.target.className;\n    fetch(url)\n      .then((response) => {\n        if (!response.ok) throw Error(response.statusText);\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({\n          words: data.words,\n          firstPlayer: data.firstPlayer,\n        })\n      })\n      .catch(error => console.log(error)); // eslint-disable-line no-console \n  }\n\n  previousPage = event => {\n    this.setState({ pageNumber: this.state.pageNumber - 1 });\n  }\n\n  nextPage = event => {\n    this.setState({ pageNumber: this.state.pageNumber + 1 });\n  }\n\n  render () {\n    return (\n      <div style={styles.screen}>\n        <div className=\"container\">\n          <div style={styles.topHalf}>\n            <HorizontalStartIndicator firstPlayer={this.state.firstPlayer} />\n            <VerticalStartIndicator firstPlayer={this.state.firstPlayer}/>\n            <Board toggleColors={this.state.toggleColors} words={this.state.words} />\n            <VerticalStartIndicator firstPlayer={this.state.firstPlayer}/>\n            <HorizontalStartIndicator firstPlayer={this.state.firstPlayer} />\n          </div>\n          <div style={styles.bottomHalf}>\n            <div style={styles.webPacks}>\n              <Chevron direction=\"left\" \n                onClick={this.previousPage} \n                webPacksPerPage={this.props.webPacksPerPage} \n                pageNumber={this.state.pageNumber} \n                totalPacks={this.state.totalPacks}\n              />\n              <WordPackList wordPacks={this.state.wordPacks} onClick={this.handlePacks} webPacksPerPage={this.props.webPacksPerPage} pageNumber={this.state.pageNumber} />\n              <Chevron direction=\"right\"\n                onClick={this.nextPage} \n                webPacksPerPage={this.props.webPacksPerPage} \n                pageNumber={this.state.pageNumber} \n                totalPacks={this.state.totalPacks}\n              />\n            </div>\n            <div style={styles.button} onClick={this.toggleView} className=\"toggle-view\">\n              <h1>Toggle Colors</h1>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  screen: {\n    backgroundColor: \"white\",\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  topHalf: {\n    display: \"flex\",\n    flexFlow: \"row wrap\",\n    height: \"80%\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  bottomHalf: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"20%\"\n  },\n  button: {\n    display: \"flex\",\n    backgroundColor: \"white\",\n    width: \"25%\",\n    height: \"50%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    boxShadow: \"3px 3px\",\n    cursor: \"pointer\",\n    margin: \"5%\",\n    overflowWrap: \"break-word\",\n    userSelect: \"none\",\n    textAlign: \"center\",\n    padding: \"2.5%\",\n  },\n  webPacks: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"60%\",\n    margin: \"5%\",\n    height: \"40%\"\n  }\n};\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Static/css/index.css';\nimport App from './Components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App url=\"https://testing-deployment-01.herokuapp.com/api/v1/\" webPacksPerPage={3} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}